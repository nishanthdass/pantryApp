{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nisha\\\\Pantry\\\\client\\\\src\\\\pages\\\\login_register\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Login = props => {\n  _s();\n  const [emailuser, setEmailUser] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(emailuser);\n    console.log(password);\n    props.onLogin(emailuser, password);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"emailuser\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Email or User name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: emailuser,\n            onChange: event => setEmailUser(event.target.value),\n            type: \"text\",\n            placeholder: \"example@domain.com or user name\",\n            id: \"emailuser\",\n            name: \"emailuser\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: password,\n            onChange: event => setPassword(event.target.value),\n            type: \"password\",\n            placeholder: \"*********\",\n            id: \"password\",\n            name: \"password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"LogIn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        onClick: () => props.onFormChange('registerPage'),\n        children: \"Register here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Login, \"/hjB69HWLQzjodPzsqQ/9+BQqEg=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","props","_s","emailuser","setEmailUser","password","setPassword","handleSubmit","event","preventDefault","console","log","onLogin","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","type","placeholder","id","name","required","onClick","onFormChange","_c","$RefreshReg$"],"sources":["C:/Users/nisha/Pantry/client/src/pages/login_register/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\"\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport const Login = (props) => {\r\n    \r\n    const [emailuser, setEmailUser] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        console.log(emailuser)\r\n        console.log(password)   \r\n        props.onLogin(emailuser, password);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <div>\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n            <label htmlFor=\"emailuser\"><b>Email or User name:</b></label>\r\n            <input value={emailuser} onChange={(event) => setEmailUser(event.target.value)} type=\"text\" placeholder=\"example@domain.com or user name\" id=\"emailuser\" name=\"emailuser\" required></input>\r\n            </div>\r\n            <div>\r\n            <label htmlFor=\"password\"><b>password:</b></label>\r\n            <input value={password} onChange={(event) => setPassword(event.target.value)} type=\"password\" placeholder=\"*********\" id=\"password\" name=\"password\" required></input>\r\n            </div>\r\n            <button type=\"submit\">LogIn</button>\r\n        </form>\r\n        <Link onClick={()=>props.onFormChange('registerPage')}>Register here</Link>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}